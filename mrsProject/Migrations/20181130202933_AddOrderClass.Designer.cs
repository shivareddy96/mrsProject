// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mrsProject.DAL;

namespace mrsProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20181130202933_AddOrderClass")]
    partial class AddOrderClass
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mrsProject.Models.AppUser", b =>
                {
                    b.Property<string>("Email")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<bool>("ActiveStatus");

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<string>("CreditCard1");

                    b.Property<string>("CreditCard2");

                    b.Property<string>("CreditCard3");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FirstName");

                    b.Property<string>("Id");

                    b.Property<int?>("InventoryID");

                    b.Property<string>("LastName");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("State");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName");

                    b.Property<string>("Zipcode");

                    b.HasKey("Email");

                    b.HasIndex("InventoryID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("mrsProject.Models.Book", b =>
                {
                    b.Property<int>("BookID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus");

                    b.Property<string>("Author");

                    b.Property<string>("BookDescription");

                    b.Property<decimal>("Cost");

                    b.Property<int?>("GenreID");

                    b.Property<int?>("InventoryID");

                    b.Property<bool>("ItemInStock");

                    b.Property<DateTime>("LastOrderDate");

                    b.Property<int>("NumInStock");

                    b.Property<decimal>("Price");

                    b.Property<DateTime>("PublicationDate");

                    b.Property<int>("ReOrder");

                    b.Property<decimal>("SimpleRating");

                    b.Property<string>("Title");

                    b.HasKey("BookID");

                    b.HasIndex("GenreID");

                    b.HasIndex("InventoryID");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("mrsProject.Models.Discount", b =>
                {
                    b.Property<string>("CouponCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DiscountDescription");

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("CouponCode");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("mrsProject.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GenreName");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("mrsProject.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InventoryQuantity");

                    b.Property<int>("ReorderPoint");

                    b.Property<decimal>("ReorderPrice");

                    b.HasKey("InventoryID");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("mrsProject.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiscountCouponCode");

                    b.Property<DateTime>("OrderDate");

                    b.Property<string>("OrderNotes");

                    b.Property<int>("OrderNumber");

                    b.Property<decimal>("SalesTax");

                    b.Property<decimal>("ShippingCost");

                    b.Property<decimal>("Subtotal");

                    b.Property<decimal>("Total");

                    b.Property<string>("userEmail");

                    b.HasKey("OrderID");

                    b.HasIndex("DiscountCouponCode");

                    b.HasIndex("userEmail");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("mrsProject.Models.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookID");

                    b.Property<decimal>("OrderDetailPrice");

                    b.Property<decimal>("OrderExtendedPrice");

                    b.Property<int?>("OrderID");

                    b.Property<int>("OrderQuantity");

                    b.HasKey("OrderDetailID");

                    b.HasIndex("BookID");

                    b.HasIndex("OrderID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("mrsProject.Models.Review", b =>
                {
                    b.Property<int>("ReviewID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Approved");

                    b.Property<string>("ApproverEmail");

                    b.Property<string>("AuthorEmail");

                    b.Property<int?>("BookID");

                    b.Property<decimal>("Rating");

                    b.Property<string>("ReviewDescription");

                    b.HasKey("ReviewID");

                    b.HasIndex("ApproverEmail");

                    b.HasIndex("AuthorEmail");

                    b.HasIndex("BookID");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("mrsProject.Models.AppUser", b =>
                {
                    b.HasOne("mrsProject.Models.Inventory")
                        .WithMany("Users")
                        .HasForeignKey("InventoryID");
                });

            modelBuilder.Entity("mrsProject.Models.Book", b =>
                {
                    b.HasOne("mrsProject.Models.Genre", "Genre")
                        .WithMany("Books")
                        .HasForeignKey("GenreID");

                    b.HasOne("mrsProject.Models.Inventory", "inventory")
                        .WithMany("Books")
                        .HasForeignKey("InventoryID");
                });

            modelBuilder.Entity("mrsProject.Models.Order", b =>
                {
                    b.HasOne("mrsProject.Models.Discount")
                        .WithMany("Orders")
                        .HasForeignKey("DiscountCouponCode");

                    b.HasOne("mrsProject.Models.AppUser", "user")
                        .WithMany("Orders")
                        .HasForeignKey("userEmail");
                });

            modelBuilder.Entity("mrsProject.Models.OrderDetail", b =>
                {
                    b.HasOne("mrsProject.Models.Book", "Book")
                        .WithMany("OrderDetails")
                        .HasForeignKey("BookID");

                    b.HasOne("mrsProject.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID");
                });

            modelBuilder.Entity("mrsProject.Models.Review", b =>
                {
                    b.HasOne("mrsProject.Models.AppUser", "Approver")
                        .WithMany("ReviewsApproved")
                        .HasForeignKey("ApproverEmail");

                    b.HasOne("mrsProject.Models.AppUser", "Author")
                        .WithMany("ReviewsWritten")
                        .HasForeignKey("AuthorEmail");

                    b.HasOne("mrsProject.Models.Book", "book")
                        .WithMany("Reviews")
                        .HasForeignKey("BookID");
                });
#pragma warning restore 612, 618
        }
    }
}
